[{"D:\\random\\side\\prayertimes\\src\\index.js":"1","D:\\random\\side\\prayertimes\\src\\reportWebVitals.js":"2","D:\\random\\side\\prayertimes\\src\\App.js":"3","D:\\random\\side\\prayertimes\\src\\Prayertimes.tsx":"4","D:\\random\\side\\prayertimes\\src\\Flex.tsx":"5"},{"size":500,"mtime":1609308463690,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609308463690,"results":"8","hashOfConfig":"7"},{"size":408,"mtime":1609323049092,"results":"9","hashOfConfig":"7"},{"size":6780,"mtime":1609368434608,"results":"10","hashOfConfig":"7"},{"size":421,"mtime":1609311484536,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1fltxar",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\random\\side\\prayertimes\\src\\index.js",[],["24","25"],"D:\\random\\side\\prayertimes\\src\\reportWebVitals.js",[],"D:\\random\\side\\prayertimes\\src\\App.js",["26"],"D:\\random\\side\\prayertimes\\src\\Prayertimes.tsx",["27","28"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FlexCol, FlexRow } from \"./Flex\";\r\nconst PrayerTimes = () => {\r\n  let storedCity = window.localStorage.getItem(\"city\");\r\n  let storedCountry = window.localStorage.getItem(\"country\");\r\n\r\n  const [prayerInfo, setPrayerInfo] = useState(null);\r\n  const [city, setCity] = useState(storedCity || \"Boston\");\r\n  const [country, setCountry] = useState(storedCountry || \"USA\");\r\n  const [changeCityModal, setChangeCityModal] = useState(false);\r\n  const [aboutModal, setAboutModal] = useState(false);\r\n\r\n  const originalCity = useRef(city);\r\n  const originalCountry = useRef(country);\r\n\r\n  let fiveTimes = [\r\n    \"Fajr\",\r\n    \"Sunrise\",\r\n    \"Dhuhr\",\r\n    \"Asr\",\r\n    \"Maghrib\",\r\n    \"Isha\",\r\n    \"Imsak\",\r\n  ];\r\n\r\n  let now = new Date();\r\n  let day = now.getDate(); //day of the month\r\n  let month = now.getMonth(); //month\r\n  let year = now.getFullYear(); //year\r\n\r\n  let timings: any = null;\r\n  if (prayerInfo) {\r\n    for (let key in prayerInfo as any) {\r\n      let dayInfo = (prayerInfo as any)[key];\r\n      if (parseFloat(dayInfo.date.gregorian.day) === day) {\r\n        timings = dayInfo.timings;\r\n      }\r\n    }\r\n  }\r\n\r\n  const fetchPrayerInfo = async (fetchCity: string, fetchCountry: string) => {\r\n    let fetchURL = `https://api.aladhan.com/v1/calendarByCity?city=${fetchCity}&country=${fetchCountry}&method=2&month=${\r\n      month + 1\r\n    }&year=${year}`;\r\n    fetch(fetchURL)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        setPrayerInfo(result.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPrayerInfo(city, country);\r\n  }, []);\r\n\r\n  return (\r\n    <FlexCol style={{ width: \"100%\" }}>\r\n      <FlexRow style={{ width: \"60%\", margin: \"auto\" }}>\r\n        <h1>{`Prayer Times for ${originalCity.current} ${originalCountry.current}`}</h1>\r\n      </FlexRow>\r\n      <FlexRow style={{ width: \"60%\", margin: \"auto\" }}>\r\n        <h2>{`${now.toLocaleDateString()}`}</h2>\r\n      </FlexRow>\r\n      {timings &&\r\n        Object.keys(timings).map((prayerName) => {\r\n          if (fiveTimes.includes(prayerName)) {\r\n            return (\r\n              <FlexRow\r\n                style={{\r\n                  width: \"60%\",\r\n                  maxWidth: \"500px\",\r\n                  margin: \"auto\",\r\n                  fontSize: \"1.2em\",\r\n                  justifyContent: \"space-between\",\r\n                  clear: \"both\",\r\n                  borderBottom: \"4px solid black\",\r\n                  paddingTop: \"20px\",\r\n                }}\r\n              >\r\n                <span style={{ float: \"left\" }}>{prayerName}</span>\r\n                <span></span>\r\n                <span style={{ float: \"right\" }}> {timings[prayerName]}</span>\r\n                <div style={{ clear: \"both\" }} />\r\n              </FlexRow>\r\n            );\r\n          }\r\n        })}\r\n      <div\r\n        onClick={() => {\r\n          setChangeCityModal(true);\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"5vw\",\r\n          right: \"5vw\",\r\n          fontSize: \"1.4em\",\r\n        }}\r\n      >\r\n        [Change City]\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          setAboutModal(true);\r\n        }}\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"5vw\",\r\n          left: \"5vw\",\r\n          fontSize: \"1.4em\",\r\n        }}\r\n      >\r\n        [About]\r\n      </div>\r\n      {changeCityModal && (\r\n        <FlexCol\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"20px\",\r\n            left: \"5vw\",\r\n            width: \"80vw\",\r\n            maxWidth: \"400px\",\r\n            // height: \"60vh\",\r\n            backgroundColor: \"rgba(200,200,200)\",\r\n            borderRadius: \"20px\",\r\n            padding: \"20px\",\r\n            justifyContent: \"left\",\r\n          }}\r\n        >\r\n          <FlexRow style={{ fontSize: \"1.2em\" }}>\r\n            <span style={{ float: \"left\" }}> City? </span>{\" \"}\r\n            <input\r\n              placeholder={\"Boston\"}\r\n              type=\"text\"\r\n              style={{\r\n                float: \"right\",\r\n                width: \"200px\",\r\n                height: \"25px\",\r\n                fontSize: \"1.2em\",\r\n              }}\r\n              onChange={(event) => {\r\n                setCity(event.target.value);\r\n              }}\r\n              value={city}\r\n            ></input>\r\n            <div style={{ clear: \"both\" }}></div>\r\n          </FlexRow>\r\n          <FlexRow style={{ fontSize: \"1.2em\" }}>\r\n            <span style={{ float: \"left\" }}> Country? </span>{\" \"}\r\n            <input\r\n              placeholder={\"USA\"}\r\n              type=\"text\"\r\n              style={{\r\n                float: \"right\",\r\n                width: \"200px\",\r\n                height: \"25px\",\r\n                fontSize: \"1.2em\",\r\n              }}\r\n              onChange={(event) => {\r\n                setCountry(event.target.value);\r\n              }}\r\n              value={country}\r\n            ></input>\r\n            <div style={{ clear: \"both\" }}></div>\r\n          </FlexRow>\r\n          <p></p>\r\n          <div\r\n            style={{ float: \"right\", fontSize: \"1.4em\" }}\r\n            onClick={() => {\r\n              window.localStorage.setItem(\"city\", city);\r\n              window.localStorage.setItem(\"country\", country);\r\n              originalCity.current = city;\r\n              originalCountry.current = country;\r\n              fetchPrayerInfo(city, country);\r\n              setChangeCityModal(false);\r\n            }}\r\n          >\r\n            [Finished]\r\n          </div>\r\n        </FlexCol>\r\n      )}\r\n      {aboutModal && (\r\n        <FlexCol\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"20px\",\r\n            left: \"5vw\",\r\n            width: \"80vw\",\r\n            maxWidth: \"400px\",\r\n            // height: \"60vh\",\r\n            backgroundColor: \"rgba(200,200,200)\",\r\n            borderRadius: \"20px\",\r\n            padding: \"20px\",\r\n            justifyContent: \"left\",\r\n          }}\r\n        >\r\n          This was an attempt at a minimal prayer times app. It's free and open\r\n          source forever isA. I used the{\" \"}\r\n          <a href=\"https://aladhan.com/prayer-times-api\">Al-Adhan API</a> which\r\n          is maintained by Islamic Network. Prayer times use the Islamic Society\r\n          of North America calculation method. This site does not track you. You\r\n          can see the source code for this site{\" \"}\r\n          <a href={\"https://github.com/ultrafro/prayertimes\"}>here</a>.<p></p>\r\n          <div\r\n            style={{ float: \"right\", fontSize: \"1.4em\" }}\r\n            onClick={() => {\r\n              setAboutModal(false);\r\n            }}\r\n          >\r\n            [Finished]\r\n          </div>\r\n        </FlexCol>\r\n      )}\r\n    </FlexCol>\r\n  );\r\n};\r\nexport default PrayerTimes;\r\n","D:\\random\\side\\prayertimes\\src\\Flex.tsx",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":54,"column":6,"nodeType":"39","endLine":54,"endColumn":8,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":65,"column":47,"nodeType":"43","messageId":"44","endLine":65,"endColumn":49},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city', 'country', and 'fetchPrayerInfo'. Either include them or remove the dependency array.","ArrayExpression",["47"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [city, country, fetchPrayerInfo]",{"range":"50","text":"51"},[1638,1640],"[city, country, fetchPrayerInfo]"]